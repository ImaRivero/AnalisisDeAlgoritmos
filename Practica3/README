+-----------------------------------------+
| Tercera práctica de Análisis Algoritmos |
+-----------------------------------------+
    ----------------
    REFRENCIA RÁPIDA
    ----------------
        Primero se debera dirigir a la carpeta "Codigo" para la compilación y ejecución del programa.

        En caso de necesitar compilación se puede realizar con el siguiente comando:
            ************
            $ javac -cp .:../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica.java
            ************

        La ejecución se debe realizar se realizará en dependencia de los argumentos ingresados:

            Ejecución de los algoritmos de Fibonacci
            ----------------------------------------
                Para la ejecución exclusiva de los algoritmos que muestran el número en la n posición de la sucesión de Fibonacci, se debe de especificar como primer argumento el valor 'f' y un segundo que indica si se realizará de manera iterativa o recursiva:

                    Iterativa
                    *********
                    $ java -cp :../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica -fi ../Archivos/valoresFibonacci
                    *********

                    Recursiva
                    *********
                    $ java -cp :../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica -fr ../Archivos/valoresFibonacci
                    *********

            Ejecución de los algoritmos de números Perfectos
            -----------------------------------------
                Para la ejecución exclusiva de los algoritmos relacionados a los números perfectos se debe de especificar como primer argumento el valor 'p' y un segundo para indicar si se quiere evaluar una lista para conocer si son perfectos, o una lista que genere los n primeros números:
                    
                    ¿Es Perfecto?
                    *************
                    $ java -cp :../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica -pe ../Archivos/valoresEsPerfecto
                    *************
                    
                    División en números pares e impares para ¿Es Perfecto?
                    ******************************************************
                    $ java -cp :../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica -peo ../Archivos/valoresEsPerfecto-ParesImpares
                    *************

                    Mostrar Perfectos
                    *****************
                    $ java -cp :../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica -pl ../Archivos/valoresListaPerfectos
                    *****************
_____________________________

	Bibliotecas
	>>>>>>>>>>>

		JFreeChart
		----------
			Utilizado para la graficación de los pares ordenados obtenidos del cálculo del tiempo de ejecución de las funciones y los valores utilizados en la función

			En este proyecto se utilizan los recursos de la biblioteca en su archivo de extensión .jar, por lo que no hay necesidad de realizar una instalación pero debe considerarse su inclusión como argumento de la compilación y ejecución.

			Nombre de la biblioteca: jfreechart-1.0.19.jar

	Instrucciones
	>>>>>>>>>>>>>

		Derivado de la utilización de bibliotecas en archivos .jar, será necesaria para su compilación especificar la ruta de los archivos. Esto se logra con el argumento de compilación y ejecución '-cp' o '-classpath'

		Para la compilación de la clase SegundPractica.java
            *************
            $ javac -cp .:../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica.java
            *************

        Para la ejecución del programa donde la clase main está en PrimeraPractica.class
			*************
            $ java -cp .:../Bibliotecas/jfreechart-1.0.19.jar:../Bibliotecas/jcommon-1.0.23.jar TercerPractica [argumentos del programa]
            *************

        Argumentos de ejecución
        =======================
            >> args[1](Opcional): precedidos de un guión '-', se debe colocar una combinacion de al menos 2 y máximo 3:
            	** f : se especifica la ejecución de la sección de algoritmo de Fibonacci
                    - i: Fibonacci iterativo
                    - r: Fibonacci recursivo
            	** p : se especifica la ejecución de la sección de algoritmo de números perfectos:
                    - e: algoritmo para identificar si un número es perfecto
                        + o: división de los valores en pares e impares
                    - l: algoritmo que muestra los primeros n números perfectos

            >> args[2](Obligatorio) - Ruta de un archivo con los datos para ser evaluados

            Ejemplo de uso de parámetros:
            	************************
                $ java TercerPractica -fi valores.txt
                $ java TercerPractica -pe valores.txt
                $ java TercerPractica -peo valores.txt
                ************************

        Formato del Archivo
        ===================
            - Solo se aceptan números enteros y comas 
            - No se aceptan caracteres alfabéticos u otros caracteres especiales
            - Se ignoran espacios, tabulaciones y saltos de línea
            - El archivo puede tener cualquier extensión
            - El par de valores deben estar separadas por la coma

                Ejemplo de archivo
                    +++++++++++++++++++
                    	5, 8, 
                        10 ,13
                    +++++++++++++++++++